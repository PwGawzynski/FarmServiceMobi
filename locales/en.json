{
  "screens": {
    "AuthDriver": {
      "chooseLoginType": {
        "header": "Sing up for FarmService",
        "email": "e-mail or NIP ",
        "google": "Sign in with Google",
        "registerButton": "Create One Now",
        "registerText": "Don't have an account?",
        "instruction": "Sing up for FarmService, and start working with pleasure"
      },
      "landing": {
        "connecting": "Connecting to server..."
      },
      "chooseRegisterType": {
        "header": "Create New Account",
        "email": "Use e-mail or NIP ",
        "google": "Use Google",
        "instruction": "Work smarter, not harder with FarmService"
      },
      "loginByEmail": {
        "header": "Sign in with e-mail or NIP",
        "email": "e-mail or NIP",
        "password": "Password",
        "forgotPassword": "Forgot password?",
        "resetPassword": "Reset password",
        "loginButton": "Sign in",
        "emailValidationInvalid": "Invalid e-mail or NIP",
        "emailValidationRequired": "e-mail or NIP is required",
        "emailValidationMinLength": "e-mail or NIP must be at least ",
        "emailValidationMaxLength": "e-mail or NIP must be at most ",
        "passwordValidationRequired": "Password is required",
        "passwordValidationMinLength": "Password must be at least ",
        "passwordValidationMaxLength": "Password must be at most ",
        "passwordValidationCharacters": "characters",
        "passwordValidationPattern": "Password must contain at least one letter and one number and one special character",
        "pendingStatus": "Signing in...",
        "emailPlaceholder": "e-mail or NIP",
        "passwordPlaceholder": "Password"
      },
      "passwordReset": {
        "instruction": "Enter your e-mail address and we will send you a link to reset your password",
        "header": "Reset password",
        "button": "Reset password",
        "pendingStatus": "Sending...",
        "afterSuccess": "It's done. If the e-mail address is correct, you will receive a link to reset your password"
      },
      "createCompany": {
          "screenTitle": "Create company",
          "submitButton": "Create",
          "successMessage": "It's done, you ready to go, let's start working with pleasure"
      }
    },
    "clientDriver": {
      "assignCompanyToClient": {
        "screenTitle": "Assign company",
        "assignationSubmitButton": "Assign",
        "editSubmitButton": "Save",
        "createButton": "Create Client with company",
        "successMessageStart": "It's done, client ",
        "successMessageEnd": " has been added and company has been assigned to it",
        "pendingStatus": "Processing..."
      },
      "clientDetails": {
        "personalData": "Personal",
        "address": "Address",
        "companyData": "Company",
        "companyAddress": "Address",
        "editButton": "Edit",
        "assignCompanyButton": "Assign company data"
      }
    },
    "clientDesktopDriver": {
      "createClient": {
        "screenTitle": "Create new client",
        "submitButton": "Create",
        "editSubmitButton": "Save",
        "successMessage": "It's done, new client has been added",
        "alertTitle": "Has your client a owner of company ?",
        "alertDescription": "If your client has a company, click create to save its data to be able to use it in the future accounting",
        "alertGoWithoutButton": "Go without",
        "alertCreateButton": "Create",
        "alertOnScreenBlurTitle": "Are you sure?",
        "alertOnScreenBlurDescription": "You have unsaved changes, are you sure you want to leave this page?",
        "alertOnScreenBlurLeaveButton": "Leave",
        "alertOnScreenBlurStayButton": "Stay",
        "pendingStatus": "Creating..."
      },
      "clientsDesktop": {
        "title": "Clients",
        "searchPlaceholder": "Find a client"
      }
    },
    "ownerRootDriver": {
      "workerAssignation": {
        "qrCodeScanCommunication": "Let the owner scan the QR code to assign you to the company",
        "qrCodeTimeOut": "Scan this code before the timer runs out",
        "connectionTimeout": "Connection timeout...",
        "error": "Error occurred...",
        "retryButton": "Retry",
        "welcomeText": "Welcome on board! ",
        "pendingStatus": "Querying your data..."
      },
      "workersDesktop": {
        "title": "Workers",
        "searchPlaceholder": "Find a worker",
        "emptyList": "No workers to display, swipe right and add new one by scanning QR code"
      },
      "workerDetails": {
        "personalData": "Personal",
        "address": "Address",
        "status": "Status",
        "Position": "Position",
        "editButton": "Edit",
        "choose": "Choose"
      }
    }
  },
  "serviceDefaults": {
    "unauthorised": "Session expired, please login again",
    "default": "Something went wrong, please try again later"
  },
  "userService": {
    "errorMessages": {
      "wrongCredentials": "Wrong credentials"
    }
  },
  "components": {
    "sendMail": {
      "title": "Send E-mail",
      "cannotSendAlertTitle": "Cannot send e-mail",
      "cannotSendAlertMessage": "Sorry we cannot send e-mail, possibly you don't have any e-mail client installed"
    },
    "call": {
      "title": "Call",
      "cannotCallAlertTitle": "Cannot call",
      "cannotCallAlertMessage": "Sorry we cannot call, possibly this device doesn't support calling"
    },
    "CallAndMailPanel": {
      "sign": "Sent from FarmService T.M."
    },
    "universalList": {
      "listEmptyText": "No data to display...",
      "listLoadingText": "Loading clients..."
    },
    "toast": {
      "clientsFetchErrorHeader": "Clients fetch error",
      "workerUpdateErrorHeader": "Worker update error",
      "clientsFetchErrorContext": "Sorry we cannot fetch clients",
      "workerUpdateErrorContext": "Sorry we cannot update worker"
    }
  },
  "addressForm": {
    "formPlaceholder": {
      "city": "City",
      "county": "County",
      "street": "Street",
      "houseNumber": "House number",
      "apartmentNumber": "Apartment number",
      "postalCode": "Postal code",
      "country": "Country",
      "voivodeship": "Voivodeship"
    },
    "validation": {
      "city": "City is required",
      "county": "County is required",
      "street": "Street is required",
      "houseNumber": "House number is required",
      "apartmentNumber": "Apartment number is required",
      "postalCode": "Postal code must be in format XX-XXX",
      "country": "Country is required",
      "voivodeship": "Voivodeship is required",
      "validationAtLeast": "must be at least ",
      "validationMaximum ": "can have maximum ",
      "validationCharacters": "characters"
    }
  },
  "createCompanyForm":{
    "formPlaceholder": {
      "email": "E-mail",
      "name": "Company name",
      "NIP": "NIP",
      "phoneNumber": "Phone number",
      "county": "County",
      "street": "Street",
      "houseNumber": "House number",
      "apartmentNumber": "Apartment number",
      "postalCode": "Postal code",
      "country": "Country",
      "voivodeship": "Voivodeship"
    },
    "validation": {
      "email": "E-mail is required",
      "name": "Company name is required",
      "NIP": "NIP  is required",
      "phoneNumber": "Phone number is required",
      "validationAtLeast": "must be at least ",
      "validationMaximum ": "can have maximum ",
      "validationCharacters": "characters"
    }
  },
  "createClientForm":{
    "formPlaceholder": {
      "email": "E-mail",
      "name": "Client name",
      "surname": "Client surname",
      "phoneNumber": "Phone number"
    },
    "validation": {
      "email": "E-mail is required",
      "emailPattern": "E-mail must be in email format",
      "name": "Client name is required",
      "surname": "Client surname is required",
      "NIP": "NIP  is required",
      "phoneNumber": "Phone number is required",
      "validationAtLeast": "must be at least ",
      "validationMaximum ": "can have maximum ",
      "validationCharacters": "characters"
    }
  }
}
